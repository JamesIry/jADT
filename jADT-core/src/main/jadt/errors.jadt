/*
Copyright 2012 James Iry

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
package com.pogofish.jadt.errors

/**
 * An error in the user's input
 */
UserError
    /**
     * A semantic user error
     *
     * @param error the content of the error
     */
  = Semantic(final SemanticError error)
    /**
     * A syntactic user error
     *
     * @param error the content of the error
     */
  | Syntactic(final SyntaxError error)

/**
 * An error found by the parser
 */
SyntaxError
     /**
      * One token was expected but another was found
      *
      * @param expected token
      * @param found token
      * @param line where the error was found
      */
   = UnexpectedToken(final String expected, final String found, final int line)

/**
 * An error found the semantic checker
 */
SemanticError
    /**
     * same data type defined twice
     *
     * @param dataTypeName that was duplicated
     */
  = DuplicateDataType(final String dataTypeName)
    /**
     * data type and constructor have the same name
     *
     * @param dataTypeName that was in conflict
     */
  | ConstructorDataTypeConflict(final String dataTypeName) 
    /**
     * Data type has two constructors with the same name
     *
     * @param dataTypeName that had the problem
     * @param constructorName that was duplicated
     */
  | DuplicateConstructor(final String dataTypeName, final String constructorName)
    /**
     * Constructor defined the same arg twice
     *
     * @param dataTypeName that had the problem
     * @param constructorName that had the problem
     * @param argName that was duplicated
     */
  | DuplicateArgName(final String dataTypeName, final String constructorName, final String argName)
    /**
     * Arg has the same modifier twice
     *
     * @param dataTypeName that had the problem
     * @param constructorName that had the problem
     * @param argName that had the problem
     * @param modifier name of the modifier that was duplicated
     */
  | DuplicateModifier(final String dataTypeName, final String constructorName, final String argName, final String modifier)
